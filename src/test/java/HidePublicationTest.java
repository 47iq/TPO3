// Generated by Selenium IDE
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.IsNot.not;

import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.jupiter.api.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class HidePublicationTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @BeforeAll
  public static void setup() {
    String value_name = System.getenv("DRIVER");
    if (value_name != null && value_name.equals("firefox")) {
      WebDriverManager.firefoxdriver().setup();
    } else {
      WebDriverManager.chromedriver().setup();
    }
  }

  @BeforeEach
  public void setUp() {
    String value_name = System.getenv("DRIVER");

    if (value_name != null && value_name.equals("firefox")) {
      driver = new FirefoxDriver();
    } else {
      driver = new ChromeDriver();
    }

    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(4));
  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void hidePublication() {
    driver.get("https://mail.ru/");
    driver.manage().window().setSize(new Dimension(1376, 1408));
    List<WebElement> tooltips = driver.findElements(By.xpath("//div[@role='presentation']"));
    if (tooltips.size() > 0) {
      tooltips.get(0).click();
    }

    //new WebDriverWait(driver, Duration.ofSeconds(10)).until(ExpectedConditions.presenceOfElementLocated(By.xpath("(//div[@id='zen-row-0'])[1]/div/div/article/div/button")));
    WebElement card = driver.findElement(By.xpath("(//div[@id='zen-row-0'])[1]/div/div/article/div/button"));
    WebElement card1 = driver.findElement(By.xpath("(//div[@id='zen-row-0'])[1]/div/div/article"));
    //WebElement card = driver.findElement(By.xpath("/html/body/main/div[2]/div[3]/div/div[5]/div/div[2]/div[1]/div/div/article/div[1]/button"));

    Actions actions = new Actions(driver);
    actions.moveToElement(card1).moveToElement(card).click().perform();

    //card.click();
    driver.findElement(By.xpath("//div[@class='feedback-card-state__feedbackList-1B']/button[1]")).click();
    new WebDriverWait(driver, Duration.ofSeconds(2))
            .until(ExpectedConditions.numberOfElementsToBe(
                    By.xpath("//div[@class='feedback-card-state__feedbackList-1B']/button[1]"), 0));

    Assertions.assertEquals("Эта публикация больше не появится в вашей ленте",
            driver.findElement(By.xpath("//div[@class='mail-card-feedback__feedback-1f']/div")).getText());
  }
}
