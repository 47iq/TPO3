// Generated by Selenium IDE

import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.jupiter.api.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.HashMap;
import java.util.Map;
public class LikePublicationTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @BeforeAll
  public static void setup() {
    String value_name = System.getenv("DRIVER");
    if (value_name.equals("firefox")) {
      WebDriverManager.firefoxdriver().setup();
    } else {
      WebDriverManager.chromedriver().setup();
    }
  }

  @BeforeEach
  public void setUp() {
    String value_name = System.getenv("DRIVER");

    if (value_name.equals("firefox")) {
      driver = new FirefoxDriver();
    } else {
      driver = new ChromeDriver();
    }

    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));

  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void likePublication() {
    boolean foundLessThan1kLikes = false;
    int retryNum = 5, likeNumAfter = 0, likeNum = 0;
    while (!foundLessThan1kLikes && retryNum >= 0) {
      driver.get("https://mail.ru/");
      driver.manage().window().setSize(new Dimension(2576, 1408));
      WebElement likeButton = driver.findElement(By.xpath("(//button[@aria-label='Нравится'])[1]"));
      WebElement likeCount = likeButton.findElement(By.xpath("span"));
      try {
        likeNum = Integer.parseInt(likeCount.getText());
        likeButton.click();
        likeCount = driver.findElement(By.xpath(("(//button[@aria-label='Нравится'])[1]/span")));
        likeNumAfter = Integer.parseInt(likeCount.getText());
        foundLessThan1kLikes = true;
      } catch (NumberFormatException e) {
        retryNum--;
        continue;
      }
    }
    Assertions.assertEquals(likeNumAfter, likeNum + 1);
  }
}
